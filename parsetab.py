
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5E7A84B8D1CBD1F808DE724DC9E7081D'
    
_lr_action_items = {'NOTEQUAL':([3,84,90,103,104,105,106,107,108,129,137,],[-2,94,-40,-55,-56,-47,-54,-43,-46,-53,-48,]),'VOID':([18,],[27,]),'INT':([5,10,11,18,30,38,39,45,51,93,101,130,],[7,7,7,7,-9,-7,7,7,7,7,7,7,]),'STRING':([5,10,11,30,38,51,93,101,130,],[6,6,6,-9,-7,6,6,6,6,]),'END':([5,8,10,11,12,14,16,17,19,22,23,26,30,38,51,53,54,55,58,60,61,62,63,65,68,70,71,72,73,76,88,117,123,133,139,],[-72,-72,-72,-72,24,-6,-3,-72,-23,-4,-5,-22,-9,-7,-72,-72,72,-30,-32,-27,-72,-33,-31,-29,-34,-28,-25,-24,-35,-26,-39,-38,-37,-71,-61,]),'IF':([10,11,14,22,23,30,38,51,53,55,58,61,62,63,65,68,70,73,88,93,101,114,116,117,123,130,133,138,139,],[-72,-72,-6,-4,-5,-9,-7,-72,57,-30,-32,57,-33,-31,-29,-34,-28,-35,-39,-72,-72,57,57,-38,-37,-72,-71,57,-61,]),'MULTIPLY':([3,103,104,105,106,107,108,129,137,],[-2,-55,-56,-47,-54,120,-46,-53,-48,]),'SEMICOLON':([3,20,21,32,33,34,35,37,40,56,79,87,90,102,103,104,105,106,107,108,113,129,137,],[-2,30,-72,-14,-16,-8,38,-72,-15,73,88,-36,-40,117,-55,-56,-47,-54,-43,-46,123,-53,-48,]),'PROGRAM':([0,],[1,]),'$end':([2,24,],[0,-1,]),'GREATER':([3,84,90,103,104,105,106,107,108,129,137,],[-2,97,-40,-55,-56,-47,-54,-43,-46,-53,-48,]),'LESS':([3,84,90,103,104,105,106,107,108,129,137,],[-2,98,-40,-55,-56,-47,-54,-43,-46,-53,-48,]),'BEGIN':([3,4,49,],[-2,5,51,]),'LPAREN':([3,36,57,59,64,67,69,74,75,78,80,81,89,91,94,95,96,97,98,99,100,106,109,110,111,112,118,119,120,121,126,134,],[-2,39,74,75,77,-72,82,-72,-72,-72,-42,-72,109,-45,-68,-72,-70,-66,-65,-67,-69,118,-72,-41,-58,-57,-72,-60,-59,-44,-42,-72,]),'MINUS':([3,90,103,104,105,106,107,108,129,137,],[-2,111,-55,-56,-47,-54,-43,-46,-53,-48,]),'ENDWHILE':([10,11,14,22,23,30,38,55,58,60,61,62,63,65,68,70,73,76,88,101,116,117,123,125,133,139,],[-72,-72,-6,-4,-5,-9,-7,-30,-32,-27,-72,-33,-31,-29,-34,-28,-35,-26,-39,-72,-72,-38,-37,133,-71,-61,]),'PLUS':([3,90,103,104,105,106,107,108,129,137,],[-2,112,-55,-56,-47,-54,-43,-46,-53,-48,]),'LESSEQUAL':([3,84,90,103,104,105,106,107,108,129,137,],[-2,100,-40,-55,-56,-47,-54,-43,-46,-53,-48,]),'ELSE':([10,11,14,22,23,30,38,55,58,60,61,62,63,65,68,70,73,76,88,93,114,117,123,124,133,139,],[-72,-72,-6,-4,-5,-9,-7,-30,-32,-27,-72,-33,-31,-29,-34,-28,-35,-26,-39,-72,-72,-38,-37,130,-71,-61,]),'WHILE':([10,11,14,22,23,30,38,51,53,55,58,61,62,63,65,68,70,73,88,93,101,114,116,117,123,130,133,138,139,],[-72,-72,-6,-4,-5,-9,-7,-72,59,-30,-32,59,-33,-31,-29,-34,-28,-35,-39,-72,-72,59,59,-38,-37,-72,-71,59,-61,]),'INTLITERAL':([67,74,75,78,80,81,89,91,94,95,96,97,98,99,100,109,110,111,112,118,119,120,121,126,134,],[-72,-72,-72,-72,-42,-72,103,-45,-68,-72,-70,-66,-65,-67,-69,-72,-41,-58,-57,-72,-60,-59,-44,-42,-72,]),'ASSIGN':([3,15,66,],[-2,25,78,]),'GREATEQUAL':([3,84,90,103,104,105,106,107,108,129,137,],[-2,96,-40,-55,-56,-47,-54,-43,-46,-53,-48,]),'ENDIF':([10,11,14,22,23,30,38,55,58,60,61,62,63,65,68,70,73,76,88,93,114,117,123,124,130,131,132,133,138,139,141,],[-72,-72,-6,-4,-5,-9,-7,-30,-32,-27,-72,-33,-31,-29,-34,-28,-35,-26,-39,-72,-72,-38,-37,-72,-72,139,-63,-71,-72,-61,-62,]),'COMMA':([3,21,37,41,48,50,90,103,104,105,106,107,108,127,129,137,140,],[-2,31,31,45,-19,45,-40,-55,-56,-47,-54,-43,-46,134,-53,-48,134,]),'EQUAL':([3,84,90,103,104,105,106,107,108,129,137,],[-2,99,-40,-55,-56,-47,-54,-43,-46,-53,-48,]),'FLOATLITERAL':([67,74,75,78,80,81,89,91,94,95,96,97,98,99,100,109,110,111,112,118,119,120,121,126,134,],[-72,-72,-72,-72,-42,-72,104,-45,-68,-72,-70,-66,-65,-67,-69,-72,-41,-58,-57,-72,-60,-59,-44,-42,-72,]),'DIVIDE':([3,103,104,105,106,107,108,129,137,],[-2,-55,-56,-47,-54,119,-46,-53,-48,]),'RPAREN':([3,21,32,33,37,39,40,41,43,44,46,47,48,50,52,83,85,86,90,92,103,104,105,106,107,108,115,118,122,126,127,128,129,135,136,137,140,142,],[-2,-72,-14,-16,-72,-72,-15,-72,49,-18,-21,-17,-19,-72,-20,93,101,102,-40,113,-55,-56,-47,-54,-43,-46,-64,-72,129,-50,-72,137,-53,-49,-52,-48,-72,-51,]),'STRINGLITERAL':([25,],[34,]),'RETURN':([10,11,14,22,23,30,38,51,53,55,58,61,62,63,65,68,70,73,88,93,101,114,116,117,123,130,133,138,139,],[-72,-72,-6,-4,-5,-9,-7,-72,67,-30,-32,67,-33,-31,-29,-34,-28,-35,-39,-72,-72,67,67,-38,-37,-72,-71,67,-61,]),'WRITE':([10,11,14,22,23,30,38,51,53,55,58,61,62,63,65,68,70,73,88,93,101,114,116,117,123,130,133,138,139,],[-72,-72,-6,-4,-5,-9,-7,-72,64,-30,-32,64,-33,-31,-29,-34,-28,-35,-39,-72,-72,64,64,-38,-37,-72,-71,64,-61,]),'FUNCTION':([5,8,10,11,14,17,22,23,30,38,72,],[-72,18,-72,-72,-6,18,-4,-5,-9,-7,-24,]),'FLOAT':([5,10,11,18,30,38,39,45,51,93,101,130,],[13,13,13,13,-9,-7,13,13,13,13,13,13,]),'IDENTIFIER':([1,6,7,9,10,11,13,14,22,23,27,28,29,30,31,38,42,51,53,55,58,61,62,63,65,67,68,70,73,74,75,77,78,80,81,82,88,89,91,93,94,95,96,97,98,99,100,101,109,110,111,112,114,116,117,118,119,120,121,123,126,130,133,134,138,139,],[3,3,-11,3,-72,-72,-10,-6,-4,-5,-13,-12,3,-9,3,-7,3,-72,3,-30,-32,3,-33,-31,-29,-72,-34,-28,-35,-72,-72,3,-72,-42,-72,3,-39,3,-45,-72,-68,-72,-70,-66,-65,-67,-69,-72,-72,-41,-58,-57,3,3,-38,-72,-60,-59,-44,-37,-42,-72,-71,-72,3,-61,]),'READ':([10,11,14,22,23,30,38,51,53,55,58,61,62,63,65,68,70,73,88,93,101,114,116,117,123,130,133,138,139,],[-72,-72,-6,-4,-5,-9,-7,-72,69,-30,-32,69,-33,-31,-29,-34,-28,-35,-39,-72,-72,69,69,-38,-37,-72,-71,69,-61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'addop':([90,],[110,]),'param_decl':([39,45,],[41,50,]),'assign_expr':([53,61,114,116,138,],[56,56,56,56,56,]),'decl':([5,10,11,51,93,101,130,],[8,22,23,53,114,116,138,]),'base_stmt':([53,61,114,116,138,],[70,70,70,70,70,]),'str':([25,],[35,]),'cond':([74,75,],[83,85,]),'id_tail':([21,37,],[32,40,]),'else_part':([124,],[131,]),'mulop':([107,],[121,]),'param_decl_list':([39,],[43,]),'var_type':([5,10,11,18,39,45,51,93,101,130,],[9,9,9,28,42,42,9,9,9,9,]),'string_decl':([5,10,11,51,93,101,130,],[10,10,10,10,10,10,10,]),'func_decl':([8,17,],[17,17,]),'expr_list':([118,],[128,]),'expr':([67,74,75,78,95,109,118,134,],[79,84,84,87,115,122,127,140,]),'any_type':([18,],[29,]),'factor_prefix':([81,],[89,]),'param_decl_tail':([41,50,],[47,52,]),'program':([0,],[2,]),'func_declarations':([8,17,],[16,26,]),'empty':([5,8,10,11,17,21,37,39,41,50,51,53,61,67,74,75,78,81,93,95,101,109,114,116,118,124,127,130,134,138,140,],[14,19,14,14,19,33,33,44,46,46,14,60,60,80,80,80,80,91,14,80,14,80,60,60,126,132,136,14,80,60,136,]),'stmt':([53,61,114,116,138,],[61,61,61,61,61,]),'read_stmt':([53,61,114,116,138,],[58,58,58,58,58,]),'primary':([89,],[108,]),'write_stmt':([53,61,114,116,138,],[62,62,62,62,62,]),'compop':([84,],[95,]),'postfix_expr':([89,],[107,]),'call_expr':([89,],[105,]),'id_list':([9,77,82,],[20,86,92,]),'expr_list_tail':([127,140,],[135,142,]),'if_stmt':([53,61,114,116,138,],[65,65,65,65,65,]),'id':([1,6,9,29,31,42,53,61,77,82,89,114,116,138,],[4,15,21,36,37,48,66,66,21,21,106,66,66,66,]),'expr_prefix':([67,74,75,78,95,109,118,134,],[81,81,81,81,81,81,81,81,]),'assign_stmt':([53,61,114,116,138,],[63,63,63,63,63,]),'return_stmt':([53,61,114,116,138,],[68,68,68,68,68,]),'var_decl':([5,10,11,51,93,101,130,],[11,11,11,11,11,11,11,]),'func_body':([51,],[54,]),'stmt_list':([53,61,114,116,138,],[71,76,124,125,141,]),'pgm_body':([5,],[12,]),'factor':([81,],[90,]),'while_stmt':([53,61,114,116,138,],[55,55,55,55,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM id BEGIN pgm_body END','program',5,'p_program_program','parser.py',67),
  ('id -> IDENTIFIER','id',1,'p_program_idea','parser.py',73),
  ('pgm_body -> decl func_declarations','pgm_body',2,'p_program_pgm_body','parser.py',80),
  ('decl -> string_decl decl','decl',2,'p_program_decl','parser.py',85),
  ('decl -> var_decl decl','decl',2,'p_program_decl','parser.py',86),
  ('decl -> empty','decl',1,'p_program_decl','parser.py',87),
  ('string_decl -> STRING id ASSIGN str SEMICOLON','string_decl',5,'p_gstring_string_decl','parser.py',93),
  ('str -> STRINGLITERAL','str',1,'p_gstring_str','parser.py',98),
  ('var_decl -> var_type id_list SEMICOLON','var_decl',3,'p_variables_var_decl','parser.py',117),
  ('var_type -> FLOAT','var_type',1,'p_variables_var_type','parser.py',122),
  ('var_type -> INT','var_type',1,'p_variables_var_type','parser.py',123),
  ('any_type -> var_type','any_type',1,'p_variables_any_type','parser.py',134),
  ('any_type -> VOID','any_type',1,'p_variables_any_type','parser.py',135),
  ('id_list -> id id_tail','id_list',2,'p_variables_id_list','parser.py',140),
  ('id_tail -> COMMA id id_tail','id_tail',3,'p_variables_id_tail','parser.py',156),
  ('id_tail -> empty','id_tail',1,'p_variables_id_tail','parser.py',157),
  ('param_decl_list -> param_decl param_decl_tail','param_decl_list',2,'p_fparams_param_decl_list','parser.py',176),
  ('param_decl_list -> empty','param_decl_list',1,'p_fparams_param_decl_list','parser.py',177),
  ('param_decl -> var_type id','param_decl',2,'p_fparams_param_decl','parser.py',207),
  ('param_decl_tail -> COMMA param_decl param_decl_tail','param_decl_tail',3,'p_fparams_param_decl_tail','parser.py',225),
  ('param_decl_tail -> empty','param_decl_tail',1,'p_fparams_param_decl_tail','parser.py',226),
  ('func_declarations -> func_decl func_declarations','func_declarations',2,'p_fdecl_func_declarations','parser.py',232),
  ('func_declarations -> empty','func_declarations',1,'p_fdecl_func_declarations','parser.py',233),
  ('func_decl -> FUNCTION any_type id LPAREN param_decl_list RPAREN BEGIN func_body END','func_decl',9,'p_fdecl_func_decl','parser.py',238),
  ('func_body -> decl stmt_list','func_body',2,'p_fdecl_func_body','parser.py',251),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_statements_stmt_list','parser.py',257),
  ('stmt_list -> empty','stmt_list',1,'p_statements_stmt_list','parser.py',258),
  ('stmt -> base_stmt','stmt',1,'p_statements_stmt','parser.py',263),
  ('stmt -> if_stmt','stmt',1,'p_statements_stmt','parser.py',264),
  ('stmt -> while_stmt','stmt',1,'p_statements_stmt','parser.py',265),
  ('base_stmt -> assign_stmt','base_stmt',1,'p_statements_base_stmt','parser.py',270),
  ('base_stmt -> read_stmt','base_stmt',1,'p_statements_base_stmt','parser.py',271),
  ('base_stmt -> write_stmt','base_stmt',1,'p_statements_base_stmt','parser.py',272),
  ('base_stmt -> return_stmt','base_stmt',1,'p_statements_base_stmt','parser.py',273),
  ('assign_stmt -> assign_expr SEMICOLON','assign_stmt',2,'p_basic_assign_stmt','parser.py',279),
  ('assign_expr -> id ASSIGN expr','assign_expr',3,'p_basic_assign_expr','parser.py',284),
  ('read_stmt -> READ LPAREN id_list RPAREN SEMICOLON','read_stmt',5,'p_basic_read_stmt','parser.py',289),
  ('write_stmt -> WRITE LPAREN id_list RPAREN SEMICOLON','write_stmt',5,'p_basic_write_stmt','parser.py',304),
  ('return_stmt -> RETURN expr SEMICOLON','return_stmt',3,'p_basic_return_stmt','parser.py',319),
  ('expr -> expr_prefix factor','expr',2,'p_expressions_expr','parser.py',325),
  ('expr_prefix -> expr_prefix factor addop','expr_prefix',3,'p_expressions_expr_prefix','parser.py',330),
  ('expr_prefix -> empty','expr_prefix',1,'p_expressions_expr_prefix','parser.py',331),
  ('factor -> factor_prefix postfix_expr','factor',2,'p_expressions_factor','parser.py',336),
  ('factor_prefix -> factor_prefix postfix_expr mulop','factor_prefix',3,'p_expressions_factor_prefix','parser.py',341),
  ('factor_prefix -> empty','factor_prefix',1,'p_expressions_factor_prefix','parser.py',342),
  ('postfix_expr -> primary','postfix_expr',1,'p_expressions_postfix_expr','parser.py',347),
  ('postfix_expr -> call_expr','postfix_expr',1,'p_expressions_postfix_expr','parser.py',348),
  ('call_expr -> id LPAREN expr_list RPAREN','call_expr',4,'p_expressions_call_expr','parser.py',353),
  ('expr_list -> expr expr_list_tail','expr_list',2,'p_expressions_expr_list','parser.py',358),
  ('expr_list -> empty','expr_list',1,'p_expressions_expr_list','parser.py',359),
  ('expr_list_tail -> COMMA expr expr_list_tail','expr_list_tail',3,'p_expressions_expr_list_tail','parser.py',364),
  ('expr_list_tail -> empty','expr_list_tail',1,'p_expressions_expr_list_tail','parser.py',365),
  ('primary -> LPAREN expr RPAREN','primary',3,'p_expressions_primary','parser.py',370),
  ('primary -> id','primary',1,'p_expressions_primary','parser.py',371),
  ('primary -> INTLITERAL','primary',1,'p_expressions_primary','parser.py',372),
  ('primary -> FLOATLITERAL','primary',1,'p_expressions_primary','parser.py',373),
  ('addop -> PLUS','addop',1,'p_expressions_addop','parser.py',378),
  ('addop -> MINUS','addop',1,'p_expressions_addop','parser.py',379),
  ('mulop -> MULTIPLY','mulop',1,'p_expressions_mulop','parser.py',384),
  ('mulop -> DIVIDE','mulop',1,'p_expressions_mulop','parser.py',385),
  ('if_stmt -> IF LPAREN cond RPAREN decl stmt_list else_part ENDIF','if_stmt',8,'p_complex_if_stmt','parser.py',391),
  ('else_part -> ELSE decl stmt_list','else_part',3,'p_complex_else_part','parser.py',404),
  ('else_part -> empty','else_part',1,'p_complex_else_part','parser.py',405),
  ('cond -> expr compop expr','cond',3,'p_complex_cond','parser.py',434),
  ('compop -> LESS','compop',1,'p_complex_compop','parser.py',461),
  ('compop -> GREATER','compop',1,'p_complex_compop','parser.py',462),
  ('compop -> EQUAL','compop',1,'p_complex_compop','parser.py',463),
  ('compop -> NOTEQUAL','compop',1,'p_complex_compop','parser.py',464),
  ('compop -> LESSEQUAL','compop',1,'p_complex_compop','parser.py',465),
  ('compop -> GREATEQUAL','compop',1,'p_complex_compop','parser.py',466),
  ('while_stmt -> WHILE LPAREN cond RPAREN decl stmt_list ENDWHILE','while_stmt',7,'p_whilestatement_while_stmt','parser.py',472),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',486),
]
